			-- ADD HERE THE DATABASE ON WHICH WE ARE WORKING
			USE [<db_name>]
			GO

			SET NOCOUNT ON
			DECLARE
			@DB_NAME SYSNAME,
			@TAB_NAME SYSNAME,
			@IND_NAME VARCHAR(5000),
			@SCHEMA_NAME SYSNAME,
			@FRAG FLOAT,
			@PAGES INT

			SET @DB_NAME=DB_NAME()
			DROP TABLE IF EXISTS #TEMPFRAG;
			CREATE TABLE #TEMPFRAG
			(
			TABLE_NAME SYSNAME,
			INDEX_NAME VARCHAR(5000),
			FRAG FLOAT,
			PAGES INT,
			SCHEM_NAME SYSNAME
			)
			USE [autodoc_price_opa]
					
			INSERT INTO #TEMPFRAG
			SELECT OBJECT_NAME(F.OBJECT_ID) OBJ,I.NAME IND,
			F.AVG_FRAGMENTATION_IN_PERCENT,
			F.PAGE_COUNT,TABLE_SCHEMA
			FROM SYS.DM_DB_INDEX_PHYSICAL_STATS (DB_ID(),NULL,NULL,NULL,NULL) F
			JOIN SYS.INDEXES I
			ON(F.OBJECT_ID=I.OBJECT_ID)AND I.INDEX_ID=F.INDEX_ID
			JOIN INFORMATION_SCHEMA.TABLES S
			ON (S.TABLE_NAME=OBJECT_NAME(F.OBJECT_ID))
			--WHERE INDEX_ID<> 0
			AND F.DATABASE_ID=DB_ID()
			AND OBJECTPROPERTY(I.OBJECT_ID,'ISSYSTEMTABLE')=0
			

			DECLARE CUR_FRAG CURSOR FOR
			SELECT * FROM #TEMPFRAG
			OPEN CUR_FRAG
			FETCH NEXT FROM CUR_FRAG INTO
			@TAB_NAME ,@IND_NAME , @FRAG , @PAGES ,@SCHEMA_NAME
			WHILE @@FETCH_STATUS=0

				BEGIN
				IF (@IND_NAME IS NOT NULL)
					BEGIN
					IF (@FRAG>30 AND @PAGES>1000)
						BEGIN
						 PRINT ('USE ['+@DB_NAME+'];ALTER INDEX ['+@IND_NAME+'] ON ['+@SCHEMA_NAME+'].['+@TAB_NAME +'] REBUILD ')
						-- EXEC ('USE ['+@DB_NAME+'];ALTER INDEX ['+@IND_NAME+'] ON ['+@SCHEMA_NAME+'].['+@TAB_NAME +'] REBUILD ')
						END

					ELSE IF((@FRAG BETWEEN 15 AND 30 ) AND @PAGES>1000 )
					BEGIN
					--IF PAGE LEVEL LOCKING IS DISABLED (PLLD) THEN REBUILD 
						BEGIN TRY
						 PRINT ('USE ['+@DB_NAME+'];ALTER INDEX ['+@IND_NAME+'] ON ['+@SCHEMA_NAME+'].['+@TAB_NAME +'] REORGANIZE ')
						-- EXEC ('USE ['+@DB_NAME+'];ALTER INDEX ['+@IND_NAME+'] ON ['+@SCHEMA_NAME+'].['+@TAB_NAME +'] REORGANIZE ')
						 PRINT ('USE ['+@DB_NAME+'];UPDATE STATISTICS ['+@SCHEMA_NAME+'].['+@TAB_NAME+'] (['+@IND_NAME+']) ' )
						-- EXEC ('USE ['+@DB_NAME+'];UPDATE STATISTICS ['+@SCHEMA_NAME+'].['+@TAB_NAME+'] (['+@IND_NAME+']) ' )
						END TRY
						BEGIN CATCH
						IF ERROR_NUMBER()=2552
						 PRINT ('USE ['+@DB_NAME+'];ALTER INDEX ['+@IND_NAME+'] ON ['+@SCHEMA_NAME+'].['+@TAB_NAME +'] REBUILD ')
						-- EXEC ('USE ['+@DB_NAME+'];ALTER INDEX ['+@IND_NAME+'] ON ['+@SCHEMA_NAME+'].['+@TAB_NAME +'] REBUILD ')
						END CATCH
					END
				ELSE
					BEGIN
					 PRINT ('USE ['+@DB_NAME+'];UPDATE STATISTICS ['+@SCHEMA_NAME+'].['+@TAB_NAME+'] (['+@IND_NAME+']) ' )
					 --EXEC ('USE ['+@DB_NAME+'];UPDATE STATISTICS ['+@SCHEMA_NAME+'].['+@TAB_NAME+'] (['+@IND_NAME+']) ' )
					END
				END

			FETCH NEXT FROM CUR_FRAG INTO
			@TAB_NAME ,@IND_NAME , @FRAG , @PAGES ,@SCHEMA_NAME
			END

			DROP TABLE IF EXISTS #TEMPFRAG
			CLOSE CUR_FRAG
			DEALLOCATE CUR_FRAG